---

- name: Assert that required variables are defined
  ansible.builtin.assert:
    that:
      - rclone_serve_protocol != None
      - rclone_serve_backend_config != None

- name: Ensure user is present
  ansible.builtin.user:
    name: "{{ rclone_serve_user }}"
    state: "present"
    system: true
  register: rclone_serve_user_res

- name: Ensure config directory is present
  ansible.builtin.file:
    path: "{{ rclone_serve_base_path }}"
    state: "directory"
    mode: "755"
    owner: "{{ rclone_serve_user_res.uid }}"
    group: "{{ rclone_serve_user_res.group }}"

- name: Ensure config is present
  ansible.builtin.template:
    src: "rclone-backend.conf.j2"
    dest: "{{ rclone_serve_config_file }}"
    mode: "0600"
    owner: "{{ rclone_serve_user_res.uid }}"
    group: "{{ rclone_serve_user_res.group }}"
  notify: container-rclone-serve-restart

- name: Ensure container image is present locally
  docker_image:
    name: "{{ rclone_serve_container_image_reference }}"
    source: "pull"
    state: "present"
    force_source: "{{ rclone_serve_container_force_pull }}"
  register: rclone_serve_container_image_pulled
  until: rclone_serve_container_image_pulled is success
  retries: 10
  delay: 5

- name: Ensure container is started
  community.docker.docker_container:
    image: "{{ rclone_serve_container_image_reference }}"
    name: "{{ rclone_serve_container_name }}"
    state: "started"
    restart_policy: "{{ rclone_serve_container_restart_policy | default(omit) }}"
    user: "{{ rclone_serve_user_res.uid ~ ':' ~ rclone_serve_user_res.group }}"
    volumes: "{{ rclone_serve_container_volumes_merged }}"
    ports: "{{ rclone_serve_container_ports }}"
    env: "{{ rclone_serve_container_env | default(omit) }}"
    labels: "{{ rclone_serve_container_labels_merged | default(omit) }}"
    command: "{{ rclone_serve_container_command }}"
    etc_hosts: "{{ rclone_serve_container_etc_hosts | default(omit) }}"
    networks: "{{ rclone_serve_container_networks | default(omit) }}"
