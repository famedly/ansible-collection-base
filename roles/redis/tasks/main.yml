---
- name: "Assure redis version isn't too new"
  ansible.builtin.assert:
    that: "'{{ redis_version }}' is version('7.2.4', '<=', version_type='semver')"
  ignore_errors: "{{ redis_allow_non_foss_yes_really }}"

- name: "Create redis user"
  user:
    name: "{{ redis_user }}"
    create_home: false
    state: "present"
  register: "redis_user_res"
  tags: ["prepare", "prepare-redis", "deploy", "deploy-redis"]

- name: "Create redis directory"
  file:
    path: "{{ redis_basepath }}"
    state: "directory"
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"
    mode: "0755"
  tags: ["prepare", "prepare-redis"]

- name: "Create redis directory for data persistance"
  file:
    path: "{{ redis_data_dir }}"
    state: "directory"
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"
    mode: "0755"
  tags: ["prepare", "prepare-redis"]

- name: "Create redis config directory"
  file:
    path: "{{ redis_config_dir }}"
    state: "directory"
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"
    mode: "0755"
  tags: ["prepare", "prepare-redis"]

- name: "Template redis config file"
  template:
    src: "redis.conf.j2"
    dest: "{{ redis_config_file }}"
    owner: "{{ redis_user }}"
    group: "{{ redis_user }}"
    mode: "0600"
  notify: "restart-redis"
  tags: ["deploy", "deploy-redis"]

- name: "Ensure redis container image is present"
  community.docker.docker_image:
    name: "{{ redis_container_image_reference }}"
    force_source: "{{ redis_container_image_force_pull }}"
    source: "pull"
    state: "present"
  tags: ["prepare", "prepare-redis"]

- name: "Setup redis docker container"
  community.docker.docker_container:
    image: "{{ redis_container_image_reference }}"
    name: "{{ redis_docker_container_name }}"
    restart_policy: "unless-stopped"
    user: "{{ redis_user_res.uid }}:{{ redis_user_res.group }}"
    ports: "{{ redis_docker_ports }}"
    volumes: "{{ redis_docker_volumes }}"
    labels: "{{ redis_docker_labels_complete }}"
    networks: "{{ redis_docker_networks | default(omit, True) }}"
    entrypoint: "redis-server"
    command: ["{{ redis_docker_configpath }}"]
    healthcheck:
      test: >-
        redis-cli -a {{ redis_secret }} PING || exit 1
  tags: ["deploy", "deploy-redis"]

- name: "Ensure redis is restarted if config changed"
  meta: "flush_handlers"
